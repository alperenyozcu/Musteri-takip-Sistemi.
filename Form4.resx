<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>